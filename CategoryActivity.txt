import android.content.Intent
import android.os.Bundle
import android.util.Log
import android.widget.ArrayAdapter
import android.widget.Button
import android.widget.EditText
import android.widget.ListView
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity
import kotlinx.coroutines.*

class CategoryActivity : AppCompatActivity() {

    private lateinit var productDbHelper: ProductDatabaseHelper // 統合版データベースヘルパー
    private lateinit var categoryNameInput: EditText
    private lateinit var categoryListView: ListView
    private lateinit var addCategoryButton: Button
    private lateinit var categories: List<Category> // カテゴリのリストを保持する変数


    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_category)

        // 統合されたデータベースヘルパーを初期化
        productDbHelper = ProductDatabaseHelper(this)
        categoryNameInput = findViewById(R.id.categoryNameInput)
        categoryListView = findViewById(R.id.categoryListView)
        addCategoryButton = findViewById(R.id.addCategoryButton)

        // カテゴリー一覧を取得して表示
        updateCategoryList()

        categoryListView.setOnItemClickListener { _, _, position, _ ->
            // タッチされたカテゴリのIDを取得
            val categoryId = categories[position].id

            // ProductListActivity へカテゴリIDを渡して遷移
            val intent = Intent(this, CategoryListActivity::class.java)
            intent.putExtra("CATEGORY_ID", categoryId)
            startActivity(intent)
        }

        // カテゴリー追加ボタンのクリックリスナー
        addCategoryButton.setOnClickListener {
            val categoryName = categoryNameInput.text.toString()
            if (categoryName.isNotBlank()) {
                // 非同期でデータベースに追加
                CoroutineScope(Dispatchers.IO).launch {
                    try {
                        productDbHelper.addCategory(categoryName) // 統合版DBにカテゴリ追加
                        withContext(Dispatchers.Main) {
                            categoryNameInput.text.clear()
                            updateCategoryList() // 一覧を更新

                            // ホーム画面に変更を通知
                            setResult(RESULT_OK)
                            finish() // CategoryActivityを終了
                        }
                    } catch (e: Exception) {
                        withContext(Dispatchers.Main) {
                            Toast.makeText(
                                this@CategoryActivity,
                                "エラーが発生しました",
                                Toast.LENGTH_SHORT
                            ).show()
                        }
                        Log.e("CategoryActivity", "カテゴリ追加エラー: ${e.message}", e)
                    }
                }
            }
        }
    }

    // カテゴリー一覧を更新する関数
    private fun updateCategoryList() {
        CoroutineScope(Dispatchers.IO).launch {
            try {
                categories = productDbHelper.getAllCategories() // カテゴリーをデータベースから取得
                val categoryNames = categories.map { it.name } // カテゴリー名だけをリストにする
                withContext(Dispatchers.Main) {
                    val adapter = ArrayAdapter(
                        this@CategoryActivity,
                        android.R.layout.simple_list_item_1,
                        categoryNames
                    )
                    categoryListView.adapter = adapter
                }
            } catch (e: Exception) {
                withContext(Dispatchers.Main) {
                    Toast.makeText(
                        this@CategoryActivity,
                        "カテゴリの取得エラー",
                        Toast.LENGTH_SHORT
                    ).show()
                }
                Log.e("CategoryActivity", "カテゴリ取得エラー: ${e.message}", e)
            }
        }
    }
}
